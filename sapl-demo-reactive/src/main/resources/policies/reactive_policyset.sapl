import io.sapl.pip.ClockPolicyInformationPoint as clock
import io.sapl.functions.TemporalFunctionLibrary as time
import filter.*

set "reactivePolicies"
deny-unless-permit
for (action == "read" & resource in ["heartBeatData", "bloodPressureData"]) | action == "readSchedulerData"


policy "permit doctor and nurse read time restricted heart beat data"
permit
  resource == "heartBeatData"
where
  "ROLE_DOCTOR" in subject..authority || "ROLE_NURSE" in subject..authority;
  var interval = 1;
  time.localSecond(interval.<mqtt.ticker>) < 31;


policy "permit doctor and nurse read time restricted blood pressure data"
permit
  resource == "bloodPressureData"
where
  "ROLE_DOCTOR" in subject..authority || "ROLE_NURSE" in subject..authority;
  var interval = 1;
  time.localSecond(interval.<mqtt.ticker>) < 31 || time.localSecond(interval.<clock.ticker>) > 35;


policy "permit visitor read time restricted heart beat data"
permit
  resource == "heartBeatData"
where
  "ROLE_VISITOR" in subject..authority;
  var interval = 1;
  !(time.localSecond(interval.<clock.ticker>) in [0,1,2,3,10,11,12,13,20,21,22,23,30,31,32,33,40,41,42,43,50,51,52,53]);


policy "permit doctor read scheduler data"
permit
  action == "readSchedulerData"
where
  "ROLE_DOCTOR" in subject..authority;
transform
  resource


policy "permit nurse read scheduler data of doctors"
permit
  action == "readSchedulerData" & resource.title == "Dr. "
where
  "ROLE_NURSE" in subject..authority;
transform
  resource |- {
                @.date : blacken(11,0,"\u2588")
              }


policy "permit nurse read scheduler data of nurses"
permit
  action == "readSchedulerData" & resource.title != "Dr. "
where
  "ROLE_NURSE" in subject..authority;
transform
  resource


policy "permit visitor read scheduler data"
permit
  action == "readSchedulerData"
where
  "ROLE_VISITOR" in subject..authority;
transform
  resource |- {
                @.name : blacken(1,0,"\u2588"),
                @.date : blacken(11,0,"\u2588")
              }
